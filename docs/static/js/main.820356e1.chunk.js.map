{"version":3,"sources":["components/Fetch.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Fetch","a","axios","get","raw","asCode","split","Object","assign","console","log","Home","useState","data","setData","useEffect","fetchit","href","target","rel","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAeeA,EAbJ,uCAAG,8BAAAC,EAAA,sEACMC,IAAMC,IACtB,wDAFU,cACNC,EADM,OAKNC,EAASD,EAAG,KAAH,GAAkBE,MAAM,KAAK,GAC5CC,OAAOC,OAAOJ,EAAG,KAAU,CAAEC,OAAQA,IAErCI,QAAQC,IAAIN,EAAG,MARH,kBAULA,EAAG,MAVE,2CAAH,qD,OCyCIO,EAxCF,WAAO,IAAD,EACOC,mBAAS,GADhB,mBACVC,EADU,KACJC,EADI,KAYjB,OAVAC,qBAAU,WAAM,4CACd,sBAAAd,EAAA,kEAEEa,EAFF,SAEgBd,IAFhB,8EADc,uBAAC,WAAD,wBAOdgB,KACC,IAGD,gCACE,sCAASH,EAAI,SACb,2CACYA,EAAI,KADhB,KAC4BA,EAAI,WADhC,KACkDA,EAAI,IADtD,IACgE,IAC7DA,EAAI,WAEP,uCAAUA,EAAI,OACd,0CAAaA,EAAI,MACjB,2CACY,IACV,mBACEI,KAAM,qBAAuBJ,EAAI,OACjCK,OAAO,SACPC,IAAI,aAHN,SAKGN,EAAI,YAGT,+CAAkBA,EAAI,UACtB,2CAAcA,EAAI,OAClB,2CAAcA,EAAI,OAClB,0CAAaA,EAAI,UACjB,4CAAeA,EAAI,gBCzBVO,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.820356e1.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst Fetch = async () => {\n  const raw = await axios.get(\n    \"http://demo.ip-api.com/json/?fields=66842623&lang=en\"\n    // \"./fakeresponse.json\"\n  );\n  const asCode = raw[\"data\"][\"as\"].split(\" \")[0];\n  Object.assign(raw[\"data\"], { asCode: asCode });\n  // console.log(asCode);\n  console.log(raw[\"data\"]);\n\n  return raw[\"data\"];\n};\n\nexport default Fetch;\n","import React, { useState, useEffect } from \"react\";\nimport Fetch from \"../components/Fetch\";\n\nconst Home = () => {\n  const [data, setData] = useState(0);\n  useEffect(() => {\n    async function fetchit() {\n      // var raw = await Fetch();\n      setData(await Fetch());\n      // console.log(raw);\n    }\n\n    fetchit();\n  }, []);\n\n  return (\n    <div>\n      <h6>IP: {data[\"query\"]}</h6>\n      <h6>\n        Address: {data[\"city\"]}, {data[\"regionName\"]}, {data[\"zip\"]},{\" \"}\n        {data[\"country\"]}\n      </h6>\n      <h6>ISP: {data[\"isp\"]}</h6>\n      <h6>ISP_AS: {data[\"as\"]}</h6>\n      <h6>\n        ISP_CODE:{\" \"}\n        <a\n          href={\"https://ipinfo.io/\" + data[\"asCode\"]}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {data[\"asCode\"]}\n        </a>\n      </h6>\n      <h6>ISP_AS_NAME: {data[\"asname\"]}</h6>\n      <h6>LOC_LAT: {data[\"lat\"]}</h6>\n      <h6>LOC_LON: {data[\"lon\"]}</h6>\n      <h6>OFFSET: {data[\"offset\"]}</h6>\n      <h6>TIMEZONE: {data[\"timezone\"]}</h6>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello World</h1>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}